-- 지원자 테이블 생성 (PostgreSQL 초기화 스크립트)
-- Docker Compose로 PostgreSQL 컨테이너 시작 시 자동 실행됨

CREATE TABLE IF NOT EXISTS applicants (
    id SERIAL PRIMARY KEY,
    content TEXT NOT NULL
);

-- 샘플 데이터 (테스트용)
-- ID는 자동 증가(SERIAL)되므로 1부터 5까지 순차적으로 생성됨
INSERT INTO applicants (content) VALUES
('저는 5년간 백엔드 개발 경력을 쌓아온 소프트웨어 엔지니어입니다. 대학에서 컴퓨터공학을 전공하며 프로그래밍의 기초를 다졌고, 졸업 후 스타트업에서 Python 기반 웹 서비스 개발을 시작했습니다. 현재는 FastAPI와 Django를 활용한 RESTful API 설계 및 구현을 주로 담당하고 있으며, AWS 클라우드 인프라 구축과 Docker를 이용한 컨테이너화 작업도 병행하고 있습니다. 특히 대용량 트래픽 처리와 데이터베이스 최적화에 관심이 많아, Redis를 활용한 캐싱 전략과 PostgreSQL 쿼리 튜닝을 통해 응답 속도를 30% 개선한 경험이 있습니다. 최근에는 LLM과 AI 기술에 흥미를 느껴 Langchain과 OpenAI API를 활용한 챗봇 서비스를 개발했으며, 이를 통해 자연어 처리 기술의 실무 적용 가능성을 확인했습니다. 항상 새로운 기술을 배우고 적용하는 것을 즐기며, 코드 리뷰와 페어 프로그래밍을 통해 팀원들과 지식을 공유하는 것을 중요하게 생각합니다.'),

('안녕하세요. 3년차 프론트엔드 개발자로서 사용자 경험을 최우선으로 생각하는 웹 개발자입니다. 대학 시절 디자인과 개발의 교차점에 매력을 느껴 웹 개발 분야에 입문하게 되었고, React와 TypeScript를 주력 기술 스택으로 현대적인 SPA 애플리케이션을 개발해왔습니다. 이전 회사에서는 전자상거래 플랫폼의 프론트엔드를 전담하며 Webpack 번들 최적화를 통해 초기 로딩 시간을 40% 단축시켰고, React Query를 도입하여 서버 상태 관리를 개선했습니다. 또한 Next.js를 활용한 SSR 구현으로 SEO 성능을 크게 향상시킨 경험이 있습니다. 웹 접근성에도 관심이 많아 WCAG 가이드라인을 준수하며 개발하고 있으며, Lighthouse 점수 90점 이상을 유지하기 위해 노력하고 있습니다. 최근에는 Tailwind CSS와 shadcn/ui를 활용한 디자인 시스템 구축 작업을 진행했고, Storybook을 통해 컴포넌트 문서화를 체계화했습니다. 끊임없이 변화하는 프론트엔드 생태계에서 새로운 기술을 빠르게 학습하고 적용하는 것을 즐기며, 사용자에게 최고의 경험을 제공하는 것을 목표로 하고 있습니다.'),

('머신러닝 엔지니어로서 데이터 기반 의사결정과 AI 모델 개발에 열정을 가지고 있습니다. 통계학을 전공하며 데이터 분석의 기초를 다졌고, 석사 과정에서 딥러닝 연구를 수행하며 컴퓨터 비전과 자연어 처리 분야의 전문성을 쌓았습니다. 현재는 Python을 주 언어로 사용하며, TensorFlow와 PyTorch를 활용한 다양한 머신러닝 모델을 설계하고 학습시키는 업무를 담당하고 있습니다. 특히 추천 시스템 개발 프로젝트에서 협업 필터링과 딥러닝 기법을 결합하여 클릭률을 25% 향상시킨 경험이 있으며, A/B 테스트를 통해 모델의 실제 성능을 검증했습니다. MLOps에도 관심이 많아 Kubeflow와 MLflow를 활용한 모델 버전 관리 및 배포 파이프라인을 구축한 경험이 있습니다. 또한 대규모 데이터 처리를 위해 Spark와 Airflow를 사용한 데이터 파이프라인을 설계하고 운영해왔습니다. 최근에는 LLM Fine-tuning과 RAG 시스템 구축에 관심을 가지고 학습 중이며, Hugging Face Transformers를 활용한 프로젝트를 진행하고 있습니다. 데이터로 비즈니스 가치를 창출하는 것에 보람을 느끼며, 항상 최신 논문과 기술 트렌드를 팔로우하고 있습니다.'),

('풀스택 개발자로서 프론트엔드부터 백엔드, 인프라까지 전 영역에 걸친 개발 경험을 보유하고 있습니다. 컴퓨터공학 학부를 졸업한 후 스타트업 환경에서 다양한 역할을 수행하며 빠르게 성장할 수 있었습니다. 백엔드는 Node.js와 Express, NestJS를 주로 사용하며 TypeScript로 타입 안정성을 확보하고 있습니다. 프론트엔드는 React와 Vue.js 모두 능숙하게 다루며, 상황에 따라 적합한 프레임워크를 선택하여 사용합니다. 데이터베이스는 MongoDB와 PostgreSQL 모두 경험이 있으며, 각각의 장단점을 이해하고 프로젝트 특성에 맞게 선택할 수 있습니다. 이커머스 플랫폼 개발 프로젝트에서 결제 시스템 연동, 재고 관리 시스템 구축, 주문 처리 자동화를 담당했으며, Stripe와 Toss Payments API를 통합한 경험이 있습니다. DevOps 측면에서는 GitHub Actions를 활용한 CI/CD 파이프라인을 구축했고, AWS EC2, S3, RDS를 활용한 클라우드 인프라를 설계하고 운영했습니다. Docker와 Kubernetes를 사용한 컨테이너 오케스트레이션 경험도 있으며, 모니터링을 위해 Prometheus와 Grafana를 도입했습니다. 최근에는 마이크로서비스 아키텍처에 관심을 가지고 있으며, gRPC와 메시지 큐를 활용한 서비스 간 통신을 학습하고 있습니다.'),

('클라우드 인프라 엔지니어로서 안정적이고 확장 가능한 시스템 구축에 전문성을 가지고 있습니다. 정보통신공학을 전공하며 네트워크와 시스템의 기초를 다졌고, 졸업 후 IDC 운영 업무를 시작으로 클라우드 엔지니어링 분야에 입문했습니다. AWS Certified Solutions Architect Associate 자격증을 보유하고 있으며, EC2, ECS, Lambda, RDS, S3 등 다양한 AWS 서비스를 실무에 활용해왔습니다. 특히 EKS를 활용한 Kubernetes 클러스터 구축과 운영 경험이 풍부하며, Helm Chart를 이용한 애플리케이션 배포 자동화를 구현했습니다. Terraform과 CloudFormation을 사용한 Infrastructure as Code 경험이 있어 인프라를 코드로 관리하고 버전 관리하는 것에 익숙합니다. 모니터링과 로깅 측면에서는 CloudWatch, DataDog, ELK Stack을 구축하여 시스템의 가시성을 확보했으며, 장애 발생 시 신속하게 대응할 수 있는 알람 시스템을 구축했습니다. 보안에도 관심이 많아 AWS IAM 정책 설계, VPC 네트워크 구성, 보안 그룹 관리를 통해 안전한 인프라를 구축하는 데 노력하고 있습니다. 비용 최적화에도 관심이 많아 Reserved Instance와 Spot Instance를 활용하여 클라우드 비용을 30% 절감한 경험이 있으며, 항상 효율적인 리소스 사용을 고민하고 있습니다.');

-- 인덱스 생성 (검색 성능 향상)
CREATE INDEX IF NOT EXISTS idx_applicants_id ON applicants(id);
